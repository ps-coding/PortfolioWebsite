{"ast":null,"code":"import firebase from '@firebase/app-compat';\nimport { logEvent, setCurrentScreen, setUserId, setUserProperties, setAnalyticsCollectionEnabled, settings, isSupported } from '@firebase/analytics';\nimport { Component } from '@firebase/component';\nconst name = \"@firebase/analytics-compat\";\nconst version = \"0.1.6\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nclass AnalyticsService {\n  constructor(app, _delegate) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  logEvent(eventName, eventParams, options) {\n    logEvent(this._delegate, eventName, eventParams, options);\n  }\n\n  setCurrentScreen(screenName, options) {\n    setCurrentScreen(this._delegate, screenName, options);\n  }\n\n  setUserId(id, options) {\n    setUserId(this._delegate, id, options);\n  }\n\n  setUserProperties(properties, options) {\n    setUserProperties(this._delegate, properties, options);\n  }\n\n  setAnalyticsCollectionEnabled(enabled) {\n    setAnalyticsCollectionEnabled(this._delegate, enabled);\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Officially recommended event names for gtag.js\r\n * Any other string is also allowed.\r\n */\n\n\nvar EventName = /*#__PURE__*/(() => {\n  (function (EventName) {\n    EventName[\"ADD_SHIPPING_INFO\"] = \"add_shipping_info\";\n    EventName[\"ADD_PAYMENT_INFO\"] = \"add_payment_info\";\n    EventName[\"ADD_TO_CART\"] = \"add_to_cart\";\n    EventName[\"ADD_TO_WISHLIST\"] = \"add_to_wishlist\";\n    EventName[\"BEGIN_CHECKOUT\"] = \"begin_checkout\";\n    /**\r\n     * @deprecated\r\n     * This event name is deprecated and is unsupported in updated\r\n     * Enhanced Ecommerce reports.\r\n     */\n\n    EventName[\"CHECKOUT_PROGRESS\"] = \"checkout_progress\";\n    EventName[\"EXCEPTION\"] = \"exception\";\n    EventName[\"GENERATE_LEAD\"] = \"generate_lead\";\n    EventName[\"LOGIN\"] = \"login\";\n    EventName[\"PAGE_VIEW\"] = \"page_view\";\n    EventName[\"PURCHASE\"] = \"purchase\";\n    EventName[\"REFUND\"] = \"refund\";\n    EventName[\"REMOVE_FROM_CART\"] = \"remove_from_cart\";\n    EventName[\"SCREEN_VIEW\"] = \"screen_view\";\n    EventName[\"SEARCH\"] = \"search\";\n    EventName[\"SELECT_CONTENT\"] = \"select_content\";\n    EventName[\"SELECT_ITEM\"] = \"select_item\";\n    EventName[\"SELECT_PROMOTION\"] = \"select_promotion\";\n    /** @deprecated */\n\n    EventName[\"SET_CHECKOUT_OPTION\"] = \"set_checkout_option\";\n    EventName[\"SHARE\"] = \"share\";\n    EventName[\"SIGN_UP\"] = \"sign_up\";\n    EventName[\"TIMING_COMPLETE\"] = \"timing_complete\";\n    EventName[\"VIEW_CART\"] = \"view_cart\";\n    EventName[\"VIEW_ITEM\"] = \"view_item\";\n    EventName[\"VIEW_ITEM_LIST\"] = \"view_item_list\";\n    EventName[\"VIEW_PROMOTION\"] = \"view_promotion\";\n    EventName[\"VIEW_SEARCH_RESULTS\"] = \"view_search_results\";\n  })(EventName || (EventName = {}));\n\n  return EventName;\n})();\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst factory = container => {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const analyticsServiceExp = container.getProvider('analytics').getImmediate();\n  return new AnalyticsService(app, analyticsServiceExp);\n};\n\nfunction registerAnalytics() {\n  const namespaceExports = {\n    Analytics: AnalyticsService,\n    settings: settings,\n    isSupported: isSupported,\n    // We removed this enum in exp so need to re-create it here for compat.\n    EventName\n  };\n  firebase.INTERNAL.registerComponent(new Component('analytics-compat', factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n\nregisterAnalytics();\nfirebase.registerVersion(name, version);\nexport { registerAnalytics }; //# sourceMappingURL=index.esm2017.js.map","map":null,"metadata":{},"sourceType":"module"}