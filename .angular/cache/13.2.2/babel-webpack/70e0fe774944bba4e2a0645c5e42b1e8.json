{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\n\nfunction ClickGameComponent_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Your speed is \", ctx_r3.speed.toFixed(2), \" \", ctx_r3.speed > 1 ? \"clicks\" : \"click\", \" per second. \");\n  }\n}\n\nfunction ClickGameComponent_ng_container_4_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Your high speed is \", ctx_r6.highSpeed.toFixed(2), \" \", ctx_r6.highSpeed > 1 ? \"clicks\" : \"click\", \" per second. \");\n  }\n}\n\nfunction ClickGameComponent_ng_container_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ClickGameComponent_ng_container_4_ng_template_2_span_0_Template, 2, 2, \"span\", 5);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Start clicking to see your speed.\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.highSpeed);\n  }\n}\n\nfunction ClickGameComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ClickGameComponent_ng_container_4_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵtemplate(2, ClickGameComponent_ng_container_4_ng_template_2_Template, 3, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(3);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.speed)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction ClickGameComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Loading speed... \");\n    i0.ɵɵelementStart(1, \"small\");\n    i0.ɵɵtext(2, \" Your speed will start displaying once you have clicked the button at least three times. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClickGameComponent = /*#__PURE__*/(() => {\n  class ClickGameComponent {\n    constructor(snackBar) {\n      this.snackBar = snackBar;\n      this.clickCount = 0;\n      this.speedClickCount = 0;\n      this.speed = 0;\n      this.seconds = 0;\n      this.firstClick = true;\n      this.lastClicked = 0;\n      this.highSpeed = 0;\n      this.delayOn = false;\n    }\n\n    ngOnInit() {\n      const clickCountSaved = localStorage.getItem('PRASHAM_PORTFOLIO_CLICK_COUNT');\n      const highSpeedSaved = localStorage.getItem('PRASHAM_PORTFOLIO_HIGH_SPEED');\n\n      if (clickCountSaved) {\n        const clickCountNumber = Number(clickCountSaved);\n\n        if (!isNaN(clickCountNumber)) {\n          this.clickCount = clickCountNumber;\n        } else {\n          this.snackBar.open('Cache corruption was detected so click count has been cleared', 'OK', {\n            panelClass: ['snackbar', 'danger-snackbar']\n          });\n          localStorage.removeItem('PRASHAM_PORTFOLIO_CLICK_COUNT');\n        }\n      }\n\n      if (highSpeedSaved) {\n        const highSpeedNumber = Number(highSpeedSaved);\n\n        if (!isNaN(highSpeedNumber)) {\n          this.highSpeed = highSpeedNumber;\n        } else {\n          this.snackBar.open('Cache corruption was detected so high speed has been cleared', 'OK', {\n            panelClass: ['snackbar', 'danger-snackbar']\n          });\n          localStorage.removeItem('PRASHAM_PORTFOLIO_HIGH_SPEED');\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.updateInterval) {\n        window.clearInterval(this.updateInterval);\n      }\n    }\n\n    increment() {\n      if (this.firstClick) {\n        this.updateInterval = window.setInterval(() => {\n          this.seconds += 0.1;\n          this.lastClicked += 0.1;\n\n          if (this.speedClickCount >= 3) {\n            this.delayOn = false;\n            this.speed = this.speedClickCount / this.seconds;\n\n            if (this.speed > this.highSpeed) {\n              this.highSpeed = this.speed;\n              localStorage.setItem('PRASHAM_PORTFOLIO_HIGH_SPEED', `${this.highSpeed}`);\n            }\n\n            if (this.lastClicked >= 3) {\n              this.seconds = 0;\n              this.lastClicked = 0;\n              this.speedClickCount = 0;\n              this.speed = 0;\n              this.firstClick = true;\n              this.delayOn = false;\n              window.clearInterval(this.updateInterval);\n            }\n          } else {\n            this.delayOn = true;\n\n            if (this.lastClicked >= 10) {\n              this.seconds = 0;\n              this.lastClicked = 0;\n              this.speedClickCount = 0;\n              this.speed = 0;\n              this.firstClick = true;\n              this.delayOn = false;\n              window.clearInterval(this.updateInterval);\n            }\n          }\n        }, 100);\n      }\n\n      this.firstClick = false;\n      this.clickCount++;\n      this.speedClickCount++;\n      this.lastClicked = 0;\n      localStorage.setItem('PRASHAM_PORTFOLIO_CLICK_COUNT', `${this.clickCount}`);\n    }\n\n    reset() {\n      if (this.updateInterval) {\n        window.clearInterval(this.updateInterval);\n      }\n\n      this.firstClick = true;\n      this.seconds = 0;\n      this.speedClickCount = 0;\n      this.speed = 0;\n      this.highSpeed = 0;\n      this.delayOn = false;\n      localStorage.removeItem('PRASHAM_PORTFOLIO_HIGH_SPEED');\n      this.clickCount = 0;\n      localStorage.removeItem('PRASHAM_PORTFOLIO_CLICK_COUNT');\n    }\n\n  }\n\n  ClickGameComponent.ɵfac = function ClickGameComponent_Factory(t) {\n    return new (t || ClickGameComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar));\n  };\n\n  ClickGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClickGameComponent,\n    selectors: [[\"app-click-game\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"space-after\", 3, \"click\"], [\"mat-flat-button\", \"\", 3, \"click\"], [\"noSpeed\", \"\"], [4, \"ngIf\"]],\n    template: function ClickGameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" Here is a fun game to play to pass some time. Click the button to you heart's satisfaction. As you click you will be able to see your speed. Click the button to increment your count, and click reset to clear your count and high speed. Your progress and high speed will be saved on device between sessions. You can challenge yourself to see how many times you can click the button within a certain time period or to see how high of a speed you can get. You can also race with your friends to see who can click the button a hundred times the fastest or to see who can get the highest speed. Have fun!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-card\");\n        i0.ɵɵelementStart(3, \"mat-card-content\");\n        i0.ɵɵtemplate(4, ClickGameComponent_ng_container_4_Template, 4, 2, \"ng-container\", 0);\n        i0.ɵɵtemplate(5, ClickGameComponent_ng_template_5_Template, 3, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ClickGameComponent_Template_button_click_9_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ClickGameComponent_Template_button_click_11_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(12, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(6);\n\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", !ctx.delayOn)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.clickCount === 0 ? \"Click Me\" : ctx.clickCount, \" \");\n      }\n    },\n    directives: [i2.MatCard, i2.MatCardContent, i3.NgIf, i4.MatButton],\n    styles: [\".space-after[_ngcontent-%COMP%]{margin-right:.6rem;margin-bottom:.6rem}\"]\n  });\n  return ClickGameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}